{"version":3,"sources":["components/Categories/Categories.tsx","components/CartButton/CartButton.tsx","components/FavouritesButton/FavouritesButton.tsx","components/Product/Product.tsx","pages/Catalog/Catalog.tsx","pages/ProductCard/ProductCard.tsx","components/CartModal/CartModal.tsx","components/TopBar/TopBar.tsx","App.tsx","index.tsx","pages/ProductCard/ProductCard.module.css","components/TopBar/TopBar.module.css","components/Product/Product.module.css","components/CartModal/CartModal.module.css","components/Categories/Categories.module.css","components/CartButton/CartButton.module.css","components/FavouritesButton/FavouritesButton.module.css","pages/Catalog/Catalog.module.css"],"names":["Categories","_ref","setCurrentCategory","value","setValue","useState","categories","setCategories","useEffect","axios","get","then","res","data","catch","err","console","log","React","createElement","Box","className","styles","Tabs","orientation","onChange","handleChange","event","newValue","aria-label","tabs","Tab","label","onClick","map","item","index","key","concat","CartButton","props","good","goods","cart","setCart","cartButton","setCartButton","handleClick","newCartProducts","filter","id","localStorage","setItem","JSON","stringify","handleRemoveFromCart","handleAddProductToCart","isCart","some","IconButton","color","ShoppingBagOutlinedIcon","classNames","cartIcon","[object Object]","active","FavouritesButton","favourites","setFavourites","favouritesButton","setfavouritesButton","newFavouritesProducts","handleRemoveFromFavorites","handleAddProductToFavorites","isFavourites","FavoriteBorderOutlinedIcon","favoriteIcon","Product","Card","card","imageContainer","src","image","alt","title","CardContent","cardContent","Typography","variant","component","Link","to","price","description","ratingContainer","mb","Rating","name","rating","rate","readOnly","count","Catalog","setGoods","currentCategory","storedfavourites","getItem","storesCart","parse","productContainer","ProductCard","setGood","params","useParams","headerContainer","ArrowBackIcon","arrowBack","CardHeader","container","textInfo","CartModal","cartModalOpen","setCartModalOpen","countItemsWithId","targetId","length","uniqueIds","Set","Dialog","open","onClose","DialogTitle","DialogContent","has","Fragment","add","priceСontainer","parseFloat","toFixed","calculatesСostFromQuantity","quantityContainer","updatedCart","indexToRemove","findIndex","element","splice","handleAddProduct","RemoveIcon","handleRemoveProduct","AddIcon","DialogActions","Button","TopBar","AppBar","appBar","Toolbar","linkHome","search","iconWrapper","SearchIcon","InputBase","placeholder","inputProps","inputBase","saveContainer","size","Badge","badgeContent","App","style","maxWidth","HashRouter","Router","Switch","Route","path","exact","render","Object","assign","ReactDOM","createRoot","document","getElementById","StrictMode","module","exports","backButton","input","iconButtonContainer"],"mappings":"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","file":"static/js/main.e87af8bb.chunk.js","sourcesContent":["import React, {useEffect, useState, Dispatch, SetStateAction,} from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport axios from 'axios';\r\nimport styles from './Categories.module.css'\r\n\r\ninterface ICurrentCategory {\r\n    setCurrentCategory: Dispatch<SetStateAction<string>>\r\n}\r\n\r\nconst Categories = ({setCurrentCategory}: ICurrentCategory) => {\r\n    const [value, setValue] = useState(0);\r\n    const [categories, setCategories] = useState<string[]>([])\r\n\r\n    useEffect(() => {\r\n        axios.get('https://fakestoreapi.com/products/categories')\r\n        .then(res => res.data)\r\n        .then(res => setCategories(res))\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n        setValue(newValue);      \r\n    };\r\n\r\n    return (\r\n    <Box className={styles.categories}>\r\n        <Tabs\r\n            orientation=\"vertical\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"Vertical tabs example\"\r\n            className={styles.tabs}>\r\n\r\n            <Tab label='All' onClick={() => {setCurrentCategory('/')}}/>\r\n            {\r\n                categories.map((item, index) => (\r\n                    <Tab key={index} label={item} onClick={() => {setCurrentCategory(`/category/${item}`)}}/>\r\n                ))\r\n            }\r\n        </Tabs>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Categories","import React, {useState, Dispatch, SetStateAction, useEffect} from 'react'\r\nimport ShoppingBagOutlinedIcon from '@mui/icons-material/ShoppingBagOutlined'\r\nimport IconButton from '@mui/material/Button'\r\nimport classNames from 'classnames'\r\nimport styles from './CartButton.module.css'\r\nimport { IGoodInfo } from '../../interfaces'\r\n\r\ninterface ICartInfo {\r\n    good: IGoodInfo,\r\n    goods: IGoodInfo[],\r\n    cart: IGoodInfo[],\r\n    setCart: Dispatch<SetStateAction<IGoodInfo[]>>\r\n}\r\n\r\nconst CartButton = (props: ICartInfo) => {\r\n    const {\r\n        good,\r\n        goods,\r\n        cart,\r\n        setCart\r\n    } = props\r\n\r\n    const [cartButton, setCartButton] = useState(false)\r\n\r\n    function handleAddProductToCart() {\r\n        const newCartProducts = [...cart, good]\r\n        setCart(newCartProducts);\r\n        localStorage.setItem('cart', JSON.stringify(newCartProducts));\r\n    }\r\n      \r\n    function handleRemoveFromCart() {\r\n        const newCartProducts = cart.filter(item => item.id !== good.id);\r\n        setCart(newCartProducts);\r\n        localStorage.setItem('cart', JSON.stringify(newCartProducts));\r\n    }\r\n    \r\n    function handleClick() {\r\n        cartButton ? handleRemoveFromCart() : handleAddProductToCart()\r\n        setCartButton(!cartButton)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const isCart = cart.some(item => item.id === good.id);\r\n        setCartButton(isCart)    \r\n    }, [goods])\r\n\r\n    return (\r\n        <IconButton \r\n            color=\"primary\"\r\n            onClick={() => {handleClick()}}>\r\n            <ShoppingBagOutlinedIcon  \r\n                className={classNames(styles.cartIcon, {[styles.active]: cartButton})}/>\r\n        </IconButton>      \r\n    )\r\n}\r\n\r\nexport default CartButton\r\n","import React, {useState, Dispatch, SetStateAction, useEffect} from 'react'\r\nimport FavoriteBorderOutlinedIcon from '@mui/icons-material/FavoriteBorderOutlined';\r\nimport IconButton from '@mui/material/Button'\r\nimport classNames from 'classnames';\r\nimport styles from './FavouritesButton.module.css'\r\nimport { IGoodInfo } from '../../interfaces';\r\n\r\ninterface IFavouritesInfo {\r\n    good: IGoodInfo,\r\n    goods: IGoodInfo[],\r\n    favourites: IGoodInfo[],\r\n    setFavourites: Dispatch<SetStateAction<IGoodInfo[]>>\r\n}\r\n\r\nconst FavouritesButton = (props: IFavouritesInfo) => {\r\n    const {\r\n        good,\r\n        goods,\r\n        favourites,\r\n        setFavourites\r\n    } = props\r\n\r\n    const [favouritesButton, setfavouritesButton] = useState(false)\r\n\r\n    function handleAddProductToFavorites() {\r\n        const newFavouritesProducts = [...favourites, good]\r\n        setFavourites(newFavouritesProducts);\r\n        localStorage.setItem('favourites', JSON.stringify(newFavouritesProducts));\r\n    }\r\n      \r\n    function handleRemoveFromFavorites() {\r\n        const newFavouritesProducts = favourites.filter(item => item.id !== good.id);\r\n        setFavourites(newFavouritesProducts);\r\n        localStorage.setItem('favourites', JSON.stringify(newFavouritesProducts));\r\n    }\r\n\r\n    function handleClick() {\r\n        favouritesButton ? handleRemoveFromFavorites() : handleAddProductToFavorites()\r\n        setfavouritesButton(!favouritesButton)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const isFavourites = favourites.some((item: any) => item.id === good.id);\r\n        setfavouritesButton(isFavourites)  \r\n    }, [goods])\r\n\r\n    return (\r\n        <IconButton \r\n            color=\"primary\" \r\n            onClick={() => {handleClick()}}>\r\n            <FavoriteBorderOutlinedIcon \r\n                className={classNames(styles.favoriteIcon, {[styles.active]: favouritesButton})}/>\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nexport default FavouritesButton","import React, { useEffect, useState, Dispatch, SetStateAction } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Rating from '@mui/material/Rating';\r\nimport Box from '@mui/material/Box';\r\nimport { Link } from 'react-router-dom';\r\nimport { IGoodInfo } from '../../interfaces';\r\nimport styles from \"./Product.module.css\"\r\nimport CartButton from '../CartButton/CartButton';\r\nimport FavouritesButton from '../FavouritesButton/FavouritesButton';\r\n\r\n\r\ninterface IProduct {\r\n  good: IGoodInfo,\r\n  goods: IGoodInfo[],\r\n  favourites: IGoodInfo[],\r\n  setFavourites: Dispatch<SetStateAction<IGoodInfo[]>>,\r\n  cart: IGoodInfo[],\r\n  setCart: Dispatch<SetStateAction<IGoodInfo[]>>,\r\n  key: number\r\n}\r\n\r\nconst Product = (props: IProduct) => {\r\n  const { \r\n    good, \r\n    goods,\r\n    favourites, \r\n    setFavourites, \r\n    cart, \r\n    setCart,\r\n  } = props\r\n\r\n  return (\r\n    <Card className={styles.card}>\r\n      <div className={styles.imageContainer}>    \r\n        <img src={good.image} alt={good.title} className={styles.image}/>      \r\n      </div>\r\n\r\n      <CardContent className={styles.cardContent}>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n          <Link to={`/product/${good.id}`}>{good.title}</Link>\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n          Цена: {good.price}\r\n        </Typography>\r\n        <Typography className={styles.description} variant=\"body2\" color=\"text.secondary\">\r\n          {good.description}\r\n        </Typography>\r\n        <Box className={styles.ratingContainer} component=\"fieldset\" mb={3}>\r\n          <Typography component=\"legend\">Рейтинг:</Typography>\r\n          <Rating name=\"read-only\" value={good.rating.rate} readOnly/>\r\n        </Box>\r\n        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n          Количество в наличии: {good.rating.count}\r\n        </Typography>\r\n        <div>               \r\n          <CartButton good={good} goods={goods} setCart={setCart} cart={cart}/>\r\n          <FavouritesButton good={good} goods={goods} setFavourites={setFavourites} favourites={favourites}/>\r\n        </div>     \r\n      </CardContent>\r\n\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React, { useEffect, useState, Dispatch, SetStateAction } from 'react'\r\nimport Categories from '../../components/Categories/Categories';\r\nimport Product from '../../components/Product/Product';\r\nimport { IGoodInfo } from '../../interfaces';\r\nimport axios from 'axios';\r\nimport styles from './Catalog.module.css'\r\n\r\ninterface ICatalog {\r\n    setCart: Dispatch<SetStateAction<IGoodInfo[]>>\r\n    cart: IGoodInfo[]\r\n    setFavourites: Dispatch<SetStateAction<IGoodInfo[]>>\r\n    favourites: IGoodInfo[]\r\n}\r\n\r\nexport function Catalog(props: ICatalog) {\r\n    const {\r\n        setCart, \r\n        cart, \r\n        setFavourites, \r\n        favourites\r\n    } = props\r\n\r\n    const [goods, setGoods] = useState<IGoodInfo[]>([])\r\n    const [currentCategory, setCurrentCategory] = useState<string>('')\r\n\r\n    useEffect(() => {       \r\n        axios.get(`https://fakestoreapi.com/products${currentCategory}`)\r\n        .then(res => res.data)\r\n        .then(res => setGoods(res))\r\n        .catch(err => console.log(err))     \r\n    }, [currentCategory])\r\n\r\n    useEffect(() => {\r\n        const storedfavourites = localStorage.getItem('favourites');\r\n        const storesCart = localStorage.getItem('cart')\r\n\r\n        if (storedfavourites) setFavourites(JSON.parse(storedfavourites));    \r\n        if (storesCart) setCart(JSON.parse(storesCart))\r\n    }, [])\r\n\r\n    return (\r\n        <div> \r\n            <div>\r\n                <Categories setCurrentCategory={setCurrentCategory}/>            \r\n                <div className={styles.productContainer}>\r\n                {\r\n                    goods && goods.map((item, index) => (    \r\n                        <Product \r\n                            key={index}\r\n                            good={item}\r\n                            goods={goods}\r\n                \r\n                            favourites={favourites} \r\n                            setFavourites={setFavourites}\r\n                \r\n                            cart={cart}\r\n                            setCart={setCart}\r\n                        />      \r\n                    ))\r\n                }\r\n                </div>\r\n            </div>     \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState, Dispatch, SetStateAction } from 'react';\r\nimport { Card, CardContent, CardHeader, Typography, IconButton, Box, Rating } from '@mui/material';\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport styles from './ProductCard.module.css'\r\nimport axios from 'axios';\r\nimport { IGoodInfo } from '../../interfaces';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport CartButton from '../../components/CartButton/CartButton';\r\nimport FavouritesButton from '../../components/FavouritesButton/FavouritesButton';\r\n\r\ninterface IProductParams {\r\n    id: string\r\n}\r\n\r\ninterface IProductCard {\r\n    setCart: Dispatch<SetStateAction<IGoodInfo[]>>\r\n    cart: IGoodInfo[]\r\n    setFavourites: Dispatch<SetStateAction<IGoodInfo[]>>\r\n    favourites: IGoodInfo[]\r\n}\r\n\r\nconst ProductCard = (props: IProductCard) => {\r\n    const {\r\n        favourites, \r\n        setFavourites, \r\n        cart, \r\n        setCart,\r\n    } = props\r\n\r\n    const [good, setGood] = useState<IGoodInfo>();\r\n    const params: IProductParams = useParams();\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://fakestoreapi.com/products/${params.id}`)\r\n        .then(res => res.data)\r\n        .then(res => setGood(res))\r\n    }, [])\r\n\r\n    return (\r\n        <Card className={styles.card}>\r\n            <div className={styles.headerContainer}>\r\n                <Link to={`/`}>\r\n                    <ArrowBackIcon className={styles.arrowBack}/>\r\n                </Link>\r\n                <CardHeader title={good?.title}/>\r\n            </div>\r\n            \r\n            <div className={styles.container}>\r\n                <div className={styles.imageContainer}>\r\n                    <img src={good?.image} alt={good?.title} className={styles.image} />\r\n                </div>\r\n                <CardContent>\r\n                    <Typography className={styles.textInfo} variant=\"h6\" color=\"text.secondary\">\r\n                        Цена: {good?.price}\r\n                    </Typography>\r\n                    <Typography className={styles.textInfo} variant=\"body2\" color=\"text.secondary\">\r\n                    {good?.description}\r\n                    </Typography>\r\n                    <Box component=\"fieldset\" mb={3}>\r\n                        <Typography component=\"legend\">Рейтинг:</Typography>\r\n                        <Rating name=\"read-only\" value={good?.rating.rate || 0} readOnly/>\r\n                    </Box>\r\n                    <Typography className={styles.textInfo} variant=\"subtitle2\" color=\"text.secondary\">\r\n                    Количество в наличии: {good?.rating.count}\r\n                    </Typography>\r\n                    <div>    \r\n                        {good && <CartButton good={good} goods={[]} setCart={setCart} cart={cart}/>}           \r\n                        {good && <FavouritesButton good={good} goods={[]} setFavourites={setFavourites} favourites={favourites}/>} \r\n                    </div>    \r\n                </CardContent>\r\n            </div>\r\n        </Card>\r\n      );\r\n};\r\n\r\nexport default ProductCard\r\n\r\n","import React, {Dispatch, SetStateAction} from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport { IGoodInfo } from '../../interfaces';\r\nimport styles from './CartModal.module.css'\r\n\r\ninterface CartModalProps {\r\n  cartModalOpen: boolean;\r\n  setCartModalOpen: Dispatch<SetStateAction<boolean>>,\r\n  cart: IGoodInfo[];\r\n  setCart: Dispatch<SetStateAction<IGoodInfo[]>>\r\n}\r\n\r\nconst CartModal = (props: CartModalProps) => {\r\n  const { \r\n    cartModalOpen, \r\n    setCartModalOpen, \r\n    cart, \r\n    setCart\r\n  } = props\r\n\r\n  function countItemsWithId(targetId: number): number {\r\n    const filteredArray = cart.filter(item => item.id === targetId);\r\n    return filteredArray.length;\r\n  }\r\n\r\n  function handleAddProduct(item: IGoodInfo) {\r\n    const updatedCart = [...cart]\r\n    const indexToRemove  = updatedCart.findIndex(element => element.id === item.id);\r\n\r\n    if (indexToRemove !== -1) {      \r\n        let removedItem = updatedCart.splice(indexToRemove, 1)[0];\r\n        setCart([...updatedCart])\r\n        localStorage.setItem('cart', JSON.stringify([...updatedCart]));\r\n    }\r\n  }\r\n\r\n  function handleRemoveProduct(item: IGoodInfo) {\r\n    setCart([...cart, item])\r\n    localStorage.setItem('cart', JSON.stringify([...cart, item]));\r\n  }\r\n\r\n  function calculatesСostFromQuantity(item: IGoodInfo): number{\r\n    return parseFloat((item.price * countItemsWithId(item.id)).toFixed(2))\r\n  }\r\n\r\n  const uniqueIds = new Set();\r\n\r\n  return (\r\n    <Dialog open={cartModalOpen} onClose={() => {setCartModalOpen(false)}}>\r\n      <DialogTitle>Корзина</DialogTitle>\r\n      <DialogContent>\r\n        {cart.map((item) => {\r\n          if (uniqueIds.has(item.id)) return <></>;\r\n          uniqueIds.add(item.id);\r\n\r\n          return (\r\n            <div className={styles.container} key={item.id}>\r\n              <div className={styles.imageContainer}>\r\n                <img className={styles.image} src={item.image} alt={item.title}/>\r\n              </div>\r\n              <p>{item.title}</p>     \r\n              <div className={styles.priceСontainer}>\r\n                <p>Цена: {calculatesСostFromQuantity(item)}</p>\r\n                <div className={styles.quantityContainer}>          \r\n                  <IconButton onClick={() => {handleAddProduct(item)}}>\r\n                    <RemoveIcon />\r\n                  </IconButton>\r\n                  {countItemsWithId(item.id)}\r\n                  <IconButton onClick={() => {handleRemoveProduct(item)}}>\r\n                    <AddIcon />\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={() => {setCartModalOpen(false)}} color=\"primary\">Закрыть</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CartModal\r\n\r\n","import React, {useState, Dispatch, SetStateAction} from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Badge from '@mui/material/Badge';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { IGoodInfo } from '../../interfaces';\r\nimport styles from \"./TopBar.module.css\"\r\nimport ShoppingBagOutlinedIcon from '@mui/icons-material/ShoppingBagOutlined';\r\nimport FavoriteBorderOutlinedIcon from '@mui/icons-material/FavoriteBorderOutlined';\r\nimport CartModal from '../CartModal/CartModal';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\ninterface ProductsArray {\r\n    favourites: IGoodInfo[]\r\n    cart: IGoodInfo[]\r\n    setCart: Dispatch<SetStateAction<IGoodInfo[]>>\r\n}\r\n\r\nconst TopBar = (props: ProductsArray) => {\r\n  const {\r\n    favourites,\r\n    cart,\r\n    setCart,\r\n  } = props\r\n\r\n  const [cartModalOpen, setCartModalOpen] = useState(false);\r\n\r\n  function handleOpenCart() {\r\n    cart.length > 0 ? setCartModalOpen(true) : setCartModalOpen(false)\r\n  }\r\n  \r\n  return (\r\n    <Box className={styles.container}>\r\n      <AppBar className={styles.appBar}>\r\n        <Toolbar>     \r\n          <Typography variant=\"h6\">\r\n            <Link className={styles.linkHome} to={'/'}>ShopEProject</Link>\r\n          </Typography>\r\n          <div className={styles.search}>\r\n            <div className={styles.iconWrapper}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              className={styles.inputBase}\r\n            />\r\n          </div>\r\n          \r\n          <Box className={styles.saveContainer}>\r\n            <IconButton onClick={() => {handleOpenCart()}} size=\"large\" color=\"inherit\">\r\n              <Badge badgeContent={cart.length} color=\"error\">\r\n                <ShoppingBagOutlinedIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton size=\"large\" color=\"inherit\">\r\n              <Badge badgeContent={favourites.length} color=\"error\">\r\n                <FavoriteBorderOutlinedIcon />\r\n              </Badge>\r\n            </IconButton>         \r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n    <CartModal cartModalOpen={cartModalOpen} setCartModalOpen={setCartModalOpen} cart={cart} setCart={setCart}/>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TopBar","import React, {useState} from 'react';\nimport { BrowserRouter as Router, Route, Switch, HashRouter } from 'react-router-dom';\nimport { Catalog } from './pages/Catalog/Catalog';\nimport ProductCard from './pages/ProductCard/ProductCard';\nimport TopBar from './components/TopBar/TopBar';\nimport { IGoodInfo } from './interfaces';\n\nconst App = () =>{\n  const [favourites, setFavourites] = useState<IGoodInfo[]>([])\n  const [cart, setCart] = useState<IGoodInfo[]>([])\n\n  return (\n    <div style={{maxWidth: 1170}}>\n      <HashRouter>\n        <Router>\n          <TopBar favourites={favourites} cart={cart} setCart={setCart}/>\n          <Switch>\n            <Route path=\"/\" exact render={(props)=><Catalog {...props} favourites={favourites} setFavourites={setFavourites} cart={cart} setCart={setCart}/>}/>\n            <Route path=\"/product/:id\" render={(props)=><ProductCard {...props} favourites={favourites} setFavourites={setFavourites} cart={cart} setCart={setCart}/>}/>\n          </Switch>\n        </Router>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ProductCard_card__1VXVZ\",\"image\":\"ProductCard_image__2x8kR\",\"backButton\":\"ProductCard_backButton__2DnhG\",\"container\":\"ProductCard_container__hKmxm\",\"headerContainer\":\"ProductCard_headerContainer__3MJQ0\",\"arrowBack\":\"ProductCard_arrowBack__2xOG_\",\"imageContainer\":\"ProductCard_imageContainer__3tLdv\",\"textInfo\":\"ProductCard_textInfo__32rrK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TopBar_container__1IfYr\",\"search\":\"TopBar_search__1YgRP\",\"iconWrapper\":\"TopBar_iconWrapper__1iAx8\",\"inputBase\":\"TopBar_inputBase__3qcrp\",\"input\":\"TopBar_input__3cXtJ\",\"appBar\":\"TopBar_appBar__1048m\",\"saveContainer\":\"TopBar_saveContainer__2EBXK\",\"linkHome\":\"TopBar_linkHome__3Q218\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Product_card__2lP2_\",\"imageContainer\":\"Product_imageContainer__305mE\",\"image\":\"Product_image__1YptX\",\"cardContent\":\"Product_cardContent__2ESsv\",\"ratingContainer\":\"Product_ratingContainer__botgz\",\"description\":\"Product_description__24P7P\",\"iconButtonContainer\":\"Product_iconButtonContainer__6KAz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CartModal_container__KY0Q0\",\"imageContainer\":\"CartModal_imageContainer__17_AV\",\"image\":\"CartModal_image__1SNBT\",\"priceСontainer\":\"CartModal_priceСontainer__3JhIY\",\"quantityContainer\":\"CartModal_quantityContainer__1FtDc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categories\":\"Categories_categories__28dSd\",\"tabs\":\"Categories_tabs__34hoz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartIcon\":\"CartButton_cartIcon__2c05E\",\"active\":\"CartButton_active__1_AyF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favoriteIcon\":\"FavouritesButton_favoriteIcon__2yzS8\",\"active\":\"FavouritesButton_active__1V-sQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productContainer\":\"Catalog_productContainer__2_grv\"};"],"sourceRoot":""}